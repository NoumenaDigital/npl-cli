var Q=Object.defineProperty;var X=(o,t,e)=>t in o?Q(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var c=(o,t,e)=>X(o,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function e(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=e(n);fetch(n.href,i)}})();/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const B=globalThis,I=B.trustedTypes,D=I?I.createPolicy("lit-html",{createHTML:o=>o}):void 0,z="$lit$",k=`lit$${Math.random().toFixed(9).slice(2)}$`,J="?"+k,ee=`<${J}>`,E=document,_=()=>E.createComment(""),w=o=>o===null||typeof o!="object"&&typeof o!="function",O=Array.isArray,te=o=>O(o)||typeof(o==null?void 0:o[Symbol.iterator])=="function",q=`[
\f\r]`,$=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,W=/-->/g,j=/>/g,g=RegExp(`>|${q}(?:([^\\s"'>=/]+)(${q}*=${q}*(?:[^
\f\r"'\`<>=]|("|')|))|$)`,"g"),G=/'/g,F=/"/g,Y=/^(?:script|style|textarea|title)$/i,se=o=>(t,...e)=>({_$litType$:o,strings:t,values:e}),p=se(1),L=Symbol.for("lit-noChange"),b=Symbol.for("lit-nothing"),V=new WeakMap,f=E.createTreeWalker(E,129);function Z(o,t){if(!O(o)||!o.hasOwnProperty("raw"))throw Error("invalid template strings array");return D!==void 0?D.createHTML(t):t}const ne=(o,t)=>{const e=o.length-1,s=[];let n,i=t===2?"<svg>":t===3?"<math>":"",r=$;for(let l=0;l<e;l++){const a=o[l];let u,h,d=-1,v=0;for(;v<a.length&&(r.lastIndex=v,h=r.exec(a),h!==null);)v=r.lastIndex,r===$?h[1]==="!--"?r=W:h[1]!==void 0?r=j:h[2]!==void 0?(Y.test(h[2])&&(n=RegExp("</"+h[2],"g")),r=g):h[3]!==void 0&&(r=g):r===g?h[0]===">"?(r=n??$,d=-1):h[1]===void 0?d=-2:(d=r.lastIndex-h[2].length,u=h[1],r=h[3]===void 0?g:h[3]==='"'?F:G):r===F||r===G?r=g:r===W||r===j?r=$:(r=g,n=void 0);const y=r===g&&o[l+1].startsWith("/>")?" ":"";i+=r===$?a+ee:d>=0?(s.push(u),a.slice(0,d)+z+a.slice(d)+k+y):a+k+(d===-2?l:y)}return[Z(o,i+(o[e]||"<?>")+(t===2?"</svg>":t===3?"</math>":"")),s]};class S{constructor({strings:t,_$litType$:e},s){let n;this.parts=[];let i=0,r=0;const l=t.length-1,a=this.parts,[u,h]=ne(t,e);if(this.el=S.createElement(u,s),f.currentNode=this.el.content,e===2||e===3){const d=this.el.content.firstChild;d.replaceWith(...d.childNodes)}for(;(n=f.nextNode())!==null&&a.length<l;){if(n.nodeType===1){if(n.hasAttributes())for(const d of n.getAttributeNames())if(d.endsWith(z)){const v=h[r++],y=n.getAttribute(d).split(k),H=/([.?@])?(.*)/.exec(v);a.push({type:1,index:i,name:H[2],strings:y,ctor:H[1]==="."?ie:H[1]==="?"?re:H[1]==="@"?ae:P}),n.removeAttribute(d)}else d.startsWith(k)&&(a.push({type:6,index:i}),n.removeAttribute(d));if(Y.test(n.tagName)){const d=n.textContent.split(k),v=d.length-1;if(v>0){n.textContent=I?I.emptyScript:"";for(let y=0;y<v;y++)n.append(d[y],_()),f.nextNode(),a.push({type:2,index:++i});n.append(d[v],_())}}}else if(n.nodeType===8)if(n.data===J)a.push({type:2,index:i});else{let d=-1;for(;(d=n.data.indexOf(k,d+1))!==-1;)a.push({type:7,index:i}),d+=k.length-1}i++}}static createElement(t,e){const s=E.createElement("template");return s.innerHTML=t,s}}function C(o,t,e=o,s){var r,l;if(t===L)return t;let n=s!==void 0?(r=e._$Co)==null?void 0:r[s]:e._$Cl;const i=w(t)?void 0:t._$litDirective$;return(n==null?void 0:n.constructor)!==i&&((l=n==null?void 0:n._$AO)==null||l.call(n,!1),i===void 0?n=void 0:(n=new i(o),n._$AT(o,e,s)),s!==void 0?(e._$Co??(e._$Co=[]))[s]=n:e._$Cl=n),n!==void 0&&(t=C(o,n._$AS(o,t.values),n,s)),t}class oe{constructor(t,e){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=e}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:e},parts:s}=this._$AD,n=((t==null?void 0:t.creationScope)??E).importNode(e,!0);f.currentNode=n;let i=f.nextNode(),r=0,l=0,a=s[0];for(;a!==void 0;){if(r===a.index){let u;a.type===2?u=new T(i,i.nextSibling,this,t):a.type===1?u=new a.ctor(i,a.name,a.strings,this,t):a.type===6&&(u=new le(i,this,t)),this._$AV.push(u),a=s[++l]}r!==(a==null?void 0:a.index)&&(i=f.nextNode(),r++)}return f.currentNode=E,n}p(t){let e=0;for(const s of this._$AV)s!==void 0&&(s.strings!==void 0?(s._$AI(t,s,e),e+=s.strings.length-2):s._$AI(t[e])),e++}}class T{get _$AU(){var t;return((t=this._$AM)==null?void 0:t._$AU)??this._$Cv}constructor(t,e,s,n){this.type=2,this._$AH=b,this._$AN=void 0,this._$AA=t,this._$AB=e,this._$AM=s,this.options=n,this._$Cv=(n==null?void 0:n.isConnected)??!0}get parentNode(){let t=this._$AA.parentNode;const e=this._$AM;return e!==void 0&&(t==null?void 0:t.nodeType)===11&&(t=e.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,e=this){t=C(this,t,e),w(t)?t===b||t==null||t===""?(this._$AH!==b&&this._$AR(),this._$AH=b):t!==this._$AH&&t!==L&&this._(t):t._$litType$!==void 0?this.$(t):t.nodeType!==void 0?this.T(t):te(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==b&&w(this._$AH)?this._$AA.nextSibling.data=t:this.T(E.createTextNode(t)),this._$AH=t}$(t){var i;const{values:e,_$litType$:s}=t,n=typeof s=="number"?this._$AC(t):(s.el===void 0&&(s.el=S.createElement(Z(s.h,s.h[0]),this.options)),s);if(((i=this._$AH)==null?void 0:i._$AD)===n)this._$AH.p(e);else{const r=new oe(n,this),l=r.u(this.options);r.p(e),this.T(l),this._$AH=r}}_$AC(t){let e=V.get(t.strings);return e===void 0&&V.set(t.strings,e=new S(t)),e}k(t){O(this._$AH)||(this._$AH=[],this._$AR());const e=this._$AH;let s,n=0;for(const i of t)n===e.length?e.push(s=new T(this.O(_()),this.O(_()),this,this.options)):s=e[n],s._$AI(i),n++;n<e.length&&(this._$AR(s&&s._$AB.nextSibling,n),e.length=n)}_$AR(t=this._$AA.nextSibling,e){var s;for((s=this._$AP)==null?void 0:s.call(this,!1,!0,e);t&&t!==this._$AB;){const n=t.nextSibling;t.remove(),t=n}}setConnected(t){var e;this._$AM===void 0&&(this._$Cv=t,(e=this._$AP)==null||e.call(this,t))}}class P{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,e,s,n,i){this.type=1,this._$AH=b,this._$AN=void 0,this.element=t,this.name=e,this._$AM=n,this.options=i,s.length>2||s[0]!==""||s[1]!==""?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=b}_$AI(t,e=this,s,n){const i=this.strings;let r=!1;if(i===void 0)t=C(this,t,e,0),r=!w(t)||t!==this._$AH&&t!==L,r&&(this._$AH=t);else{const l=t;let a,u;for(t=i[0],a=0;a<i.length-1;a++)u=C(this,l[s+a],e,a),u===L&&(u=this._$AH[a]),r||(r=!w(u)||u!==this._$AH[a]),u===b?t=b:t!==b&&(t+=(u??"")+i[a+1]),this._$AH[a]=u}r&&!n&&this.j(t)}j(t){t===b?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??"")}}class ie extends P{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===b?void 0:t}}class re extends P{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==b)}}class ae extends P{constructor(t,e,s,n,i){super(t,e,s,n,i),this.type=5}_$AI(t,e=this){if((t=C(this,t,e,0)??b)===L)return;const s=this._$AH,n=t===b&&s!==b||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,i=t!==b&&(s===b||n);n&&this.element.removeEventListener(this.name,this,s),i&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var e;typeof this._$AH=="function"?this._$AH.call(((e=this.options)==null?void 0:e.host)??this.element,t):this._$AH.handleEvent(t)}}class le{constructor(t,e,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=e,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){C(this,t)}}const M=B.litHtmlPolyfillSupport;M==null||M(S,T),(B.litHtmlVersions??(B.litHtmlVersions=[])).push("3.3.0");const m=(o,t,e)=>{const s=t;let n=s._$litPart$;return n===void 0&&(s._$litPart$=n=new T(t.insertBefore(_(),null),null,void 0,{})),n._$AI(o),n};class ce extends HTMLElement{constructor(){super(...arguments);c(this,"startButtonHandler",null)}connectedCallback(){this.render(),this.setupEventListeners()}disconnectedCallback(){this.removeEventListeners()}render(){m(this.template(),this)}template(){return p`
            <div class="step-content">
                <h1>Hello World Protocol Demo</h1>
                <div>
                    <p><b>Build a complete backend API with just 20 lines of code.</b></p>
                    <p><b>No boilerplate. No complex setup. No infrastructure headaches.</b></p>
                    <p><b>Focus on your business logic â€” let NOUMENA handle the rest.</b></p>
                    <p><b>With this demo, you'll see how NOUMENA delivers:</b></p>
                    <ul class="feature-list">
                        <li>Fine-grained & contextual access control and built-in security</li>
                        <li>Automatic persistence, transaction integrity, and error handling</li>
                        <li>Autogenerated REST API, OpenAPI spec, and a production-ready backend</li>
                    </ul>
                    <p>Discover how NOUMENA helps you build faster, safer, and smarter.</p>
                </div>
                <div class="input-container">
                    <button id="startDemoButton">Start Demo</button>
                </div>
            </div>
        `}setupEventListeners(){this.removeEventListeners();const e=this.querySelector("#startDemoButton");e&&(this.startButtonHandler=this.handleStartClick.bind(this),e.addEventListener("click",this.startButtonHandler))}removeEventListeners(){const e=this.querySelector("#startDemoButton");e&&this.startButtonHandler&&(e.removeEventListener("click",this.startButtonHandler),this.startButtonHandler=null)}handleStartClick(){this.dispatchEvent(new CustomEvent("next-step",{bubbles:!0,composed:!0}))}}customElements.define("greeting-step",ce);class A extends Error{}A.prototype.name="InvalidTokenError";function de(o){return decodeURIComponent(atob(o).replace(/(.)/g,(t,e)=>{let s=e.charCodeAt(0).toString(16).toUpperCase();return s.length<2&&(s="0"+s),"%"+s}))}function pe(o){let t=o.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return de(t)}catch{return atob(t)}}function N(o,t){if(typeof o!="string")throw new A("Invalid token specified: must be a string");t||(t={});const e=t.header===!0?0:1,s=o.split(".")[e];if(typeof s!="string")throw new A(`Invalid token specified: missing part #${e+1}`);let n;try{n=pe(s)}catch(i){throw new A(`Invalid token specified: invalid base64 for part #${e+1} (${i.message})`)}try{return JSON.parse(n)}catch(i){throw new A(`Invalid token specified: invalid json for part #${e+1} (${i.message})`)}}const R="https://engine-public-npldemo.noumena.cloud/npl/demo/HelloWorld",ue="https://keycloak-public-npldemo.noumena.cloud/realms/npldemo/protocol/openid-connect/token",he="npldemo",be=async(o,t)=>{const e={grant_type:"password",username:o,password:t,client_id:he},s=new URLSearchParams(e),n=ue,i="POST",r=await fetch(n,{method:i,body:s});return K(r,i,n)},ve=async o=>U({endpoint:`${R}/?pageSize=1&includeCount=true`,method:"GET",accessToken:o}),me=async o=>{const e={"@parties":{innovator:{entity:{preferred_username:[N(o).preferred_username]},access:{}}}};return U({endpoint:`${R}/`,method:"POST",headers:{"Content-Type":"application/json"},body:e,accessToken:o})},ye=async(o,t)=>U({endpoint:`${R}/${o}/sayHello`,method:"POST",headers:{"Content-Type":"application/json"},accessToken:t}),K=async(o,t,e)=>{const s=o;return s.requestInfo={method:t,endpoint:e,statusCode:o.status},s},U=async o=>{const t={Authorization:`Bearer ${o.accessToken}`,...o.headers},e={method:o.method,headers:t};o.body&&(e.body=JSON.stringify(o.body));const s=await fetch(o.endpoint,e);return K(s,o.method,o.endpoint)};class ke extends HTMLElement{constructor(){super(...arguments);c(this,"loginHandler",null);c(this,"backHandler",null)}connectedCallback(){this.render(),this.setupEventListeners()}disconnectedCallback(){this.removeEventListeners()}render(){m(this.template(),this)}template(){return p`
            <div class="step-content">
                <h1>Authentication</h1>
                <div>
                    <p>Log in to access the Hello World Protocol API.</p>
                    <p><code>alice</code>, <code>bob</code> and <code>carol</code> are valid users for this demo. They share the same password, prepopulated in
                        the field below.</p>
                </div>
                <div class="form-container">
                    <div class="form-group">
                        <label for="usernameInput">Username:</label>
                        <select id="usernameInput">
                            <option value="alice" selected>alice</option>
                            <option value="bob">bob</option>
                            <option value="carol">carol</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="passwordInput">Password:</label>
                        <input type="text" id="passwordInput" value="password123" readonly>
                    </div>
                </div>
                <div class="input-container">
                    <button id="backButton" class="back-button">Back</button>
                    <button id="loginButton">Login</button>
                </div>
            </div>
        `}setupEventListeners(){this.removeEventListeners();const e=this.querySelector("#loginButton");e&&(this.loginHandler=this.handleLoginClick.bind(this),e.addEventListener("click",this.loginHandler));const s=this.querySelector("#backButton");s&&(this.backHandler=this.handleBackClick.bind(this),s.addEventListener("click",this.backHandler))}removeEventListeners(){const e=this.querySelector("#loginButton");e&&this.loginHandler&&(e.removeEventListener("click",this.loginHandler),this.loginHandler=null);const s=this.querySelector("#backButton");s&&this.backHandler&&(s.removeEventListener("click",this.backHandler),this.backHandler=null)}handleBackClick(){this.dispatchEvent(new CustomEvent("previous-step",{bubbles:!0,composed:!0}))}async handleLoginClick(){const e=this.querySelector("#loginButton"),s=this.querySelector("#usernameInput"),n=this.querySelector("#passwordInput");if(n.value="password123",e&&s&&n){const i=s.value.trim(),r=n.value.trim();if(i&&r){e.disabled=!0,this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"loading",message:"Authenticating...",description:"Please wait while we authenticate your credentials."}}));try{const l=await be(i,r),{method:a,endpoint:u,statusCode:h}=l.requestInfo;if(!l.ok){const H=await l.json().catch(()=>({error:l.statusText}));this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"api-response",requestInfo:{method:a,endpoint:u,statusCode:h},body:H}})),e.disabled=!1;return}const d=await l.json(),v=d.access_token;this.dispatchEvent(new CustomEvent("set-access-token",{bubbles:!0,composed:!0,detail:v}));const y=N(v);this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"api-response",requestInfo:{method:a,endpoint:u,statusCode:h},body:d,decodedToken:y}})),this.dispatchEvent(new CustomEvent("next-step",{bubbles:!0,composed:!0}))}catch(l){console.error("Authentication error:",l),this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"error",title:"Authentication Error",message:l instanceof Error?l.message:"Failed to authenticate. Please try again."}})),e.disabled=!1}}else this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"error",title:"Validation Error",message:"Please enter both username and password."}}))}}}customElements.define("login-step",ke);class ge extends HTMLElement{constructor(){super(...arguments);c(this,"continueButtonHandler",null);c(this,"backButtonHandler",null)}set accessToken(e){this.render(e)}connectedCallback(){this.setupEventListeners()}disconnectedCallback(){this.removeEventListeners()}render(e){m(this.template(e),this)}template(e){let s="";if(e)try{const n=N(e);s=JSON.stringify(n,null,2)}catch(n){console.error("Error decoding token:",n)}return p`
            <div class="step-content">
                <h1>You are logged in</h1>
                <p>The authentication token (JWT) attributes include <code>preferred_username</code>, which is used to identify the user.</p>
                <div id="logged-in-token-info">
                    <pre class="token-info">${s}</pre>
                </div>
                <div class="input-container">
                    <button id="backButton" class="back-button">Back</button>
                    <button id="loggedInButton">Continue to Create Protocol</button>
                </div>
            </div>
        `}setupEventListeners(){this.removeEventListeners();const e=this.querySelector("#loggedInButton");e&&(this.continueButtonHandler=this.handleContinueClick.bind(this),e.addEventListener("click",this.continueButtonHandler));const s=this.querySelector("#backButton");s&&(this.backButtonHandler=this.handleBackClick.bind(this),s.addEventListener("click",this.backButtonHandler))}removeEventListeners(){const e=this.querySelector("#loggedInButton");e&&this.continueButtonHandler&&(e.removeEventListener("click",this.continueButtonHandler),this.continueButtonHandler=null);const s=this.querySelector("#backButton");s&&this.backButtonHandler&&(s.removeEventListener("click",this.backButtonHandler),this.backButtonHandler=null)}handleBackClick(){this.dispatchEvent(new CustomEvent("previous-step",{bubbles:!0,composed:!0}))}handleContinueClick(){this.dispatchEvent(new CustomEvent("next-step",{bubbles:!0,composed:!0}))}}customElements.define("logged-in-step",ge);class fe extends HTMLElement{constructor(){super(...arguments);c(this,"_accessToken");c(this,"_username","");c(this,"_helloWorldsCount",0);c(this,"createButtonClickHandler",null);c(this,"backButtonClickHandler",null)}set accessToken(e){this._accessToken=e;const s=N(e);this._username=s.preferred_username||"",this.getProtocolCount(e).then(n=>{this._helloWorldsCount=n,this.render()})}async connectedCallback(){this.render(),this.setupCreateProtocolEventListeners()}disconnectedCallback(){this.removeEventListeners()}template(e,s){return p`
      <div class="step-content">
        <h1>Create Protocol</h1>
        <div>
          <p>
            Create a new instance of the Hello World protocol. The instance will be
            created in the <code>npl-demo</code> app on NOUMENA Cloud. You could also
            run the app locally.
          </p>
          <p>
            The button below uses an endpoint automatically generated out of the NPL
            code to instantiate a Hello World protocol. Your <code>preferred_username</code>
            will be bound to the innovator party to prevent access to everyone else.
          </p>
          <p>
            If you see pre-existing Hello World instances, it is because users preceded
            you as <span id="usernameSpan"><code>${e}</code></span> on
            <span style="font-weight: bold">${s}</span> occasions.
          </p>
        </div>

        <div class="input-container">
          <button id="backButton" class="back-button">Back</button>
          <button id="createProtocolButton">Create Protocol</button>
        </div>
      </div>
    `}render(){m(this.template(this._username,this._helloWorldsCount),this)}async getProtocolCount(e){const s=await ve(e),{method:n,endpoint:i,statusCode:r}=s.requestInfo,l=await s.json();return this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"api-response",requestInfo:{method:n,endpoint:i,statusCode:r},body:l}})),l.totalItems||0}setupCreateProtocolEventListeners(){this.removeCreateProtocolEventListeners();const e=this.querySelector("#createProtocolButton");e&&(this.createButtonClickHandler=this.handleCreateProtocolClick.bind(this),e.addEventListener("click",this.createButtonClickHandler));const s=this.querySelector("#backButton");s&&(this.backButtonClickHandler=this.handleBackClick.bind(this),s.addEventListener("click",this.backButtonClickHandler))}removeCreateProtocolEventListeners(){const e=this.querySelector("#createProtocolButton");e&&this.createButtonClickHandler&&(e.removeEventListener("click",this.createButtonClickHandler),this.createButtonClickHandler=null);const s=this.querySelector("#backButton");s&&this.backButtonClickHandler&&(s.removeEventListener("click",this.backButtonClickHandler),this.backButtonClickHandler=null)}removeEventListeners(){this.removeCreateProtocolEventListeners()}handleBackClick(){this.dispatchEvent(new CustomEvent("previous-step",{bubbles:!0,composed:!0}))}async handleCreateProtocolClick(){const e=this.querySelector("#createProtocolButton");e&&(e.disabled=!0),this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"loading",message:"Creating Protocol...",description:"Please wait while we create a new protocol instance."}}));try{const s=await me(this._accessToken),{method:n,endpoint:i,statusCode:r}=s.requestInfo;if(!s.ok)throw new Error(`Error: ${r} - ${s.statusText}`);const l=await s.json();this.dispatchEvent(new CustomEvent("set-protocol-id",{bubbles:!0,composed:!0,detail:l["@id"]})),this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"api-response",requestInfo:{method:n,endpoint:i,statusCode:r},body:l}})),this.dispatchEvent(new CustomEvent("next-step",{bubbles:!0,composed:!0}))}catch(s){console.error("Protocol creation error:",s),this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"error",title:"Protocol Creation Error",message:s instanceof Error?s.message:"Failed to create protocol. Please try again."}})),e&&(e.disabled=!1)}}}customElements.define("create-protocol-step",fe);class Ee extends HTMLElement{constructor(){super(...arguments);c(this,"nextButtonHandler",null);c(this,"backButtonHandler",null)}connectedCallback(){this.render(),this.setupEventListeners()}disconnectedCallback(){this.removeEventListeners()}template(){return p`
            <div class="step-content">
                <h1>Protocol created</h1>

                <div>
                    <p>Well done!</p>
                    <p>The protocol is now ready for you. The protocol is in state
                        <code>greeting</code> and the <code>sayHello</code> action is available
                        to you.</p>
                    <p>The protocol's innovator party is bound to your
                        <code>preferred_username</code>, so only you can access the protocol
                        instance and its <code>sayHello</code> action.</p>
                </div>

                <div class="input-container">
                    <button id="backButton" class="back-button">Back</button>
                    <button id="createProtocolButton">Go to Say Hello</button>
                </div>
            </div>
        `}render(){m(this.template(),this)}setupEventListeners(){this.removeEventListeners();const e=this.querySelector("#createProtocolButton");e&&(this.nextButtonHandler=this.handleNextClick.bind(this),e.addEventListener("click",this.nextButtonHandler));const s=this.querySelector("#backButton");s&&(this.backButtonHandler=this.handleBackClick.bind(this),s.addEventListener("click",this.backButtonHandler))}removeEventListeners(){const e=this.querySelector("#createProtocolButton");e&&this.nextButtonHandler&&(e.removeEventListener("click",this.nextButtonHandler),this.nextButtonHandler=null);const s=this.querySelector("#backButton");s&&this.backButtonHandler&&(s.removeEventListener("click",this.backButtonHandler),this.backButtonHandler=null)}handleNextClick(){this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:void 0})),this.dispatchEvent(new CustomEvent("next-step",{bubbles:!0,composed:!0}))}handleBackClick(){this.dispatchEvent(new CustomEvent("previous-step",{bubbles:!0,composed:!0}))}}customElements.define("protocol-created-step",Ee);class He extends HTMLElement{constructor(){super(...arguments);c(this,"_protocolId",null);c(this,"_accessToken");c(this,"sayHelloHandler",null);c(this,"backHandler",null)}set protocolId(e){this._protocolId=e,this.render()}set accessToken(e){this._accessToken=e}connectedCallback(){this.render()}disconnectedCallback(){this.removeEventListeners()}template(){return p`
            <div class="step-content">
                <h1>Call the permission</h1>
                <div>
                    <p>Are you ready for your first Hello World in NPL?</p>
                    <p>
                        The endpoint generated from the permission will allow you to say hello.
                        But only <em>you</em> can. Other users cannot access your Hello World
                        protocol.
                    </p>
                </div>

                <div class="input-container">
                    <button id="backButton" class="back-button">Back</button>
                    <button id="sayHelloButton">Say Hello</button>
                </div>
            </div>
        `}render(){m(this.template(),this),this.setupSayHelloEventListeners()}setupSayHelloEventListeners(){this.removeEventListeners();const e=this.querySelector("#sayHelloButton");e&&(this.sayHelloHandler=this.handleSayHelloClick.bind(this),e.addEventListener("click",this.sayHelloHandler));const s=this.querySelector("#backButton");s&&(this.backHandler=this.handleBackClick.bind(this),s.addEventListener("click",this.backHandler))}removeEventListeners(){const e=this.querySelector("#sayHelloButton");e&&this.sayHelloHandler&&(e.removeEventListener("click",this.sayHelloHandler),this.sayHelloHandler=null);const s=this.querySelector("#backButton");s&&this.backHandler&&(s.removeEventListener("click",this.backHandler),this.backHandler=null)}handleBackClick(){this.dispatchEvent(new CustomEvent("previous-step",{bubbles:!0,composed:!0}))}async handleSayHelloClick(){this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"loading",message:"Sending Hello...",description:"Please wait while we process your greeting."}}));try{if(!this._protocolId)throw new Error("Protocol ID is missing");const e=await ye(this._protocolId,this._accessToken),{method:s,endpoint:n,statusCode:i}=e.requestInfo,r=await e.json(),l=typeof r=="string"?{message:r}:r;this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"api-response",requestInfo:{method:s,endpoint:n,statusCode:i},body:l}})),i===200&&this.dispatchEvent(new CustomEvent("next-step",{bubbles:!0,composed:!0}))}catch(e){console.error("Error saying hello:",e),this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:{type:"error",title:"Say Hello Error",message:e instanceof Error?e.message:"Failed to say hello. Please try again."}}))}}}customElements.define("say-hello-step",He);class Ce extends HTMLElement{constructor(){super(...arguments);c(this,"startAgainHandler",null);c(this,"backHandler",null)}connectedCallback(){this.render(),this.setupButtonEventListeners()}disconnectedCallback(){this.removeEventListeners()}template(){return p`
            <div class="step-content">
                <h1>Success!</h1>
                <div>
                    <p>See below, you've done it! You are now part of the <a href="https://community.noumenadigital.com/" target="_blank" rel="noopener">NOUMENA Community</a>!</p>
                    <p>You have used most of the <a href="https://engine-public-npldemo.noumena.cloud/swagger-ui/index.html?urls.primaryName=NPL%20Application%20-%20demo">NPL API</a> for this example. That API comes out of the box when you run the NOUMENA Runtime locally and on NOUMENA Cloud. Continue your discovery journey <a href="https://documentation.noumenadigital.com" target="_blank" rel="noopener">here</a> to learn more.</p>
                </div>
                <div class="input-container">
                    <button id="backButton" class="back-button">Back</button>
                    <button id="startAgainButton" class="again-button">Take me to the start</button>
                </div>
            </div>
        `}render(){m(this.template(),this)}setupButtonEventListeners(){this.removeEventListeners();const e=this.querySelector("#startAgainButton");e&&(this.startAgainHandler=this.handleStartAgainClick.bind(this),e.addEventListener("click",this.startAgainHandler));const s=this.querySelector("#backButton");s&&(this.backHandler=this.handleBackClick.bind(this),s.addEventListener("click",this.backHandler))}removeEventListeners(){const e=this.querySelector("#startAgainButton");e&&this.startAgainHandler&&(e.removeEventListener("click",this.startAgainHandler),this.startAgainHandler=null);const s=this.querySelector("#backButton");s&&this.backHandler&&(s.removeEventListener("click",this.backHandler),this.backHandler=null)}handleStartAgainClick(){this.dispatchEvent(new CustomEvent("show-response",{bubbles:!0,composed:!0,detail:void 0})),this.dispatchEvent(new CustomEvent("next-step",{bubbles:!0,composed:!0}))}handleBackClick(){this.dispatchEvent(new CustomEvent("previous-step",{bubbles:!0,composed:!0}))}}customElements.define("said-hello-step",Ce);class $e extends HTMLElement{constructor(){super(...arguments);c(this,"_step");c(this,"_accessToken");c(this,"_protocolId");c(this,"accessTokenHandler",null);c(this,"protocolIdHandler",null)}set step(e){this._step=e,this.render(this._step,this._protocolId)}connectedCallback(){this.accessTokenHandler=e=>{this._accessToken=e.detail},this.protocolIdHandler=e=>{this._protocolId=e.detail},this.addEventListener("set-access-token",this.accessTokenHandler),this.addEventListener("set-protocol-id",this.protocolIdHandler)}disconnectedCallback(){this.accessTokenHandler&&(this.removeEventListener("set-access-token",this.accessTokenHandler),this.accessTokenHandler=null),this.protocolIdHandler&&(this.removeEventListener("set-protocol-id",this.protocolIdHandler),this.protocolIdHandler=null)}render(e,s){m(this.template(e,s),this)}template(e,s){return this.getStepTemplate(e,s)}getStepTemplate(e,s){switch(e){case 0:return p`<greeting-step></greeting-step>`;case 1:return p`<login-step></login-step>`;case 2:return p`<logged-in-step .accessToken="${this._accessToken}"></logged-in-step>`;case 3:return p`<create-protocol-step .accessToken="${this._accessToken}"></create-protocol-step>`;case 4:return p`<protocol-created-step></protocol-created-step>`;case 5:return p`<say-hello-step .accessToken="${this._accessToken}" .protocolId="${s}"></say-hello-step>`;case 6:return p`<said-hello-step></said-hello-step>`}}}customElements.define("steps-component",$e);class Ae extends HTMLElement{constructor(){super(...arguments);c(this,"_responseData")}set responseData(e){this.render(e)}connectedCallback(){this.render(this._responseData)}render(e){m(this.template(e),this)}renderLoadingContent(e){return p`
            <div class="loading-message">
                <h3>${e.message}</h3>
                <p>${e.description||"Please wait..."}</p>
            </div>
        `}renderErrorContent(){var e,s;return p`
            <div class="error-message">
                <h3>${((e=this._responseData)==null?void 0:e.title)||"Error"}</h3>
                <p>${((s=this._responseData)==null?void 0:s.message)||"An error occurred."}</p>
            </div>
        `}renderApiResponseContent(e){const{requestInfo:s,body:n}=e||{};if(!s||!n)return p`<div>No response data available</div>`;const{method:i,endpoint:r,statusCode:l}=s;return p`
            <div class="request-details">
                <span class="method">${i}</span>
                <span class="endpoint">${r}</span>
                <span class="status-code" data-status="${l}">${l}</span>
            </div>
            <pre class="json-output" id="json-output">${JSON.stringify(n,null,2)}</pre>
        `}template(e){let s;if(!e)s="";else switch(e.type){case"loading":s=this.renderLoadingContent(e);break;case"error":s=this.renderErrorContent();break;case"api-response":s=this.renderApiResponseContent(e);break;default:s=p`<div>Unknown response type</div>`}return p`
            <h2 class="response-heading">Server Response</h2>
            ${s}
        `}}customElements.define("response-display",Ae);class Be extends HTMLElement{constructor(){super(...arguments);c(this,"copyBtnClickHandler",null)}connectedCallback(){m(this.template(),this),this.setupEventListeners()}disconnectedCallback(){this.removeEventListeners()}template(){return p`
      <div class="code-header">
        <div class="code-title">demo/HelloWorld.npl</div>
        <button class="code-copy-btn">Copy</button>
      </div>

      <div class="code-content">
        <div class="code-line"><span class="line-number">1</span> <span class="line-code"><span class="keyword">package</span> demo;</span></div>
        <div class="code-line"><span class="line-number">2</span> <span class="line-code"></span></div>
        <div class="code-line"><span class="line-number">3</span> <span class="line-code"><span class="api-annotation">@api</span></span></div>
        <div class="code-line"><span class="line-number">4</span> <span class="line-code"><span class="keyword">protocol</span>[innovator] HelloWorld() {</span></div>
        <div class="code-line"><span class="line-number">5</span> <span class="line-code"></span></div>
        <div class="code-line"><span class="line-number">6</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">initial</span> <span class="keyword">state</span> greeting;</span></div>
        <div class="code-line"><span class="line-number">7</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">final</span> <span class="keyword">state</span> greeted;</span></div>
        <div class="code-line"><span class="line-number">8</span> <span class="line-code"></span></div>
        <div class="code-line"><span class="line-number">9</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;<span class="api-annotation">@api</span></span></div>
        <div class="code-line"><span class="line-number">10</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">permission</span>[innovator] <span class="function">sayHello</span>() <span class="keyword">returns</span> Text | greeting {</span></div>
        <div class="code-line"><span class="line-number">11</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">become</span> greeted;</span></div>
        <div class="code-line"><span class="line-number">12</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span> <span class="string">"Hello "</span> + <span class="function">getUsername</span>(innovator) + <span class="string">"!"</span>;</span></div>
        <div class="code-line"><span class="line-number">13</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;};</span></div>
        <div class="code-line"><span class="line-number">14</span> <span class="line-code">};</span></div>
        <div class="code-line"><span class="line-number">15</span> <span class="line-code"></span></div>
        <div class="code-line"><span class="line-number">16</span> <span class="line-code"><span class="keyword">function</span> <span class="function">getUsername</span>(party: Party) <span class="keyword">returns</span> Text -></span></div>
        <div class="code-line"><span class="line-number">17</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;party.<span class="function">entity</span>()</span></div>
        <div class="code-line"><span class="line-number">18</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.<span class="function">getOrNone</span>(<span class="string">"preferred_username"</span>)</span></div>
        <div class="code-line"><span class="line-number">19</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.<span class="function">getOrFail</span>()</span></div>
        <div class="code-line"><span class="line-number">20</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.<span class="function">toList</span>()</span></div>
        <div class="code-line"><span class="line-number">21</span> <span class="line-code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.<span class="function">get</span>(<span class="number">0</span>);</span></div>
        <div class="code-line"><span class="line-number">22</span> <span class="line-code"></span></div>
      </div>
    `}copyCode(){const e=document.querySelectorAll(".line-code");let s="";e.forEach(n=>{s+=n.textContent+`
`}),s+=`
`,navigator.clipboard.writeText(s).then(()=>{const n=document.querySelector(".code-copy-btn");n&&(n.textContent="Copied!",setTimeout(()=>{n.textContent="Copy"},2e3))})}setupEventListeners(){const e=this.querySelector(".code-copy-btn");e&&(this.copyBtnClickHandler=()=>this.copyCode(),e.addEventListener("click",this.copyBtnClickHandler))}removeEventListeners(){const e=this.querySelector(".code-copy-btn");e&&this.copyBtnClickHandler&&(e.removeEventListener("click",this.copyBtnClickHandler),this.copyBtnClickHandler=null)}}customElements.define("code-preview-component",Be);const x={GREETING:0,SAID_HELLO:6};class _e extends HTMLElement{constructor(){super(...arguments);c(this,"currentStep",x.GREETING);c(this,"responseData");c(this,"nextStepHandler",null);c(this,"previousStepHandler",null);c(this,"showResponseHandler",null)}connectedCallback(){m(this.template(this.currentStep,this.responseData),this),this.setupEventListeners()}disconnectedCallback(){this.removeEventListeners()}setupEventListeners(){this.nextStepHandler=this.handleNextStep.bind(this),this.previousStepHandler=this.handlePreviousStep.bind(this),this.showResponseHandler=e=>{this.responseData=e.detail,this.render(this.currentStep,this.responseData)},this.addEventListener("next-step",this.nextStepHandler),this.addEventListener("previous-step",this.previousStepHandler),this.addEventListener("show-response",this.showResponseHandler)}removeEventListeners(){this.nextStepHandler&&(this.removeEventListener("next-step",this.nextStepHandler),this.nextStepHandler=null),this.previousStepHandler&&(this.removeEventListener("previous-step",this.previousStepHandler),this.previousStepHandler=null),this.showResponseHandler&&(this.removeEventListener("show-response",this.showResponseHandler),this.showResponseHandler=null)}handleNextStep(){this.currentStep=this.currentStep===x.SAID_HELLO?x.GREETING:this.currentStep+1,this.render(this.currentStep,this.responseData)}handlePreviousStep(){this.currentStep>x.GREETING&&(this.currentStep=this.currentStep-1,this.render(this.currentStep,this.responseData))}render(e,s){m(this.template(e,s),this)}template(e,s){return p`
            <div class="app-layout">
                <code-preview-component></code-preview-component>
                <steps-component .step=${e}>
                </steps-component>
                ${s&&p`<response-display .responseData="${s}"></response-display>`}
            </div>
        `}}customElements.define("noumena-app",_e);
